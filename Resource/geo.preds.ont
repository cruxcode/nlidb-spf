(
exists:<<e,t>,t>
the:<<e,t>,e>
state_prime:<s_pkey,t>
state_prime:<s_pkey,s_pkey>
state_prime:<s_pkey,<s_pkey,t>>
state_prime:<s_pkey,<t,s_pkey>>
state:<s,t>
state:<s_pkey,s>
state:<s_pkey,<s,t>>
state:<s_pkey,<t,s>>
city:<c_pkey,t>
city:<s_pkey,c_pkey>
city:<s_pkey,<c_pkey,t>>
city:<s_pkey,<t,c_pkey>>
area:<s_pkey,i>
area:<s_pkey,<i,t>>
area:<s_pkey,<t,i>>
population:<s_pkey,i>
population:<s_pkey,<i,t>>
population:<s_pkey,<t,i>>
river_prime:<r_pkey,t>
river_prime:<r_pkey,r_pkey>
river_prime:<r_pkey,<r_pkey,t>>
river_prime:<r_pkey,<t,r_pkey>>
river:<r,t>
river:<r_pkey,r>
river:<r_pkey,<r,t>>
river:<r_pkey,<t,r>>
state:<s_pkey,t>
state:<r_pkey,s_pkey>
state:<r_pkey,<s_pkey,t>>
state:<r_pkey,<t,s_pkey>>
length:<r_pkey,i>
length:<r_pkey,<i,t>>
length:<r_pkey,<t,i>>
city_prime:<c_pkey,t>
city_prime:<c_pkey,c_pkey>
city_prime:<c_pkey,<c_pkey,t>>
city_prime:<c_pkey,<t,c_pkey>>
city:<c,t>
city:<c_pkey,c>
city:<c_pkey,<c,t>>
city:<c_pkey,<t,c>>
state:<s_pkey,t>
state:<c_pkey,s_pkey>
state:<c_pkey,<s_pkey,t>>
state:<c_pkey,<t,s_pkey>>
population:<c_pkey,i>
population:<c_pkey,<i,t>>
population:<c_pkey,<t,i>>
border_prime:<b_pkey,t>
border_prime:<b_pkey,b_pkey>
border_prime:<b_pkey,<b_pkey,t>>
border_prime:<b_pkey,<t,b_pkey>>
state:<s_pkey,t>
state:<b_pkey,s_pkey>
state:<b_pkey,<s_pkey,t>>
state:<b_pkey,<t,s_pkey>>
next_to:<s_pkey,t>
next_to:<b_pkey,s_pkey>
next_to:<b_pkey,<s_pkey,t>>
next_to:<b_pkey,<t,s_pkey>>
next_to:<s,t>
next_to:<b_pkey,s>
next_to:<b_pkey,<s,t>>
next_to:<b_pkey,<t,s>>

state:<s,t>
state:<b_pkey,s>
state:<b_pkey,<s,t>>
state:<b_pkey,<t,s>>
=:<i,<i,t>>
count:<<e,t>,i>
count:<<e,e>,i>
<:<i,<i,t>>
>:<i,<i,t>>
pkey_retriever:<s,s_pkey>
pkey_retriever:<c,c_pkey>
pkey_retriever:<r,r_pkey>
pkey_retriever:<s_pkey,c_pkey>
pkey_retriever:<c_pkey,s_pkey>
pkey_retriever:<s_pkey,r_pkey>
set_retriever:<r_pkey,<s_pkey,t>>
set_retriever:<s_pkey,<i,t>>
set_retriever:<c_pkey,<i,t>>
set_retriever:<b_pkey,<s_pkey,t>>
set_retriever:<r_pkey,<r,t>>
set_retriever:<s_pkey,<s,t>>
set_retriever:<c_pkey,<c,t>>
pkey_retriever:<i,r_pkey>
pkey_retriever:<i,s_pkey>
pkey_retriever:<i,c_pkey>
set_retriever:<r_pkey,<i,t>>
set_retriever:<c_pkey,<s_pkey,t>>
pkey_retriever:<s_pkey,b_pkey>
pkey_retriever:<s,b_pkey>
set_retriever:<b_pkey,<s,t>>
size:<lo,i>
population:<lo,i>
elevation:<lo,i>
equals:<e,<e,t>>
argmax:<<e,t>,<<e,i>,e>>
argmin:<<e,t>,<<e,i>,e>>


)
